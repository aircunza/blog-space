services:
  Contexts.posts.domain.PostsRepository:
    class: ../../../contexts/Posts/Posts/infrastructure/persistence/sequelize/repository/PostPostgresqlRepository

  #### create:
  Contexts.posts.application.create.PostCreator:
    class: ../../../contexts/Posts/Posts/application/create/PostCreator
    arguments:
      [
        "@Contexts.posts.domain.PostsRepository",
        "@Contexts.shared.infrastructure.EventBus",
      ]

  Contexts.posts.application.create.CreatePostCommandHandler:
    class: ../../../contexts/Posts/Posts/application/create/CreatePostCommandHandler
    arguments: ["@Contexts.posts.application.create.PostCreator"]
    tags:
      - { name: commandHandler }

  Apps.posts.controllers.CreatePostPostCtrl:
    class: ../controllers/CreatePostPostCtrl
    arguments: ["@Contexts.shared.infrastructure.CommandBus"]

  ## Increment amount of posts use case:
  Contexts.Posts/PostsCounter.application.increment.IncrementPostsCounterOnPostCreated:
    class: ../../../contexts/Posts/PostsCounter/application/increment/IncrementPostsCounterOnPostCreated
    arguments:
      [
        "@Contexts.Posts/PostsCounter.application.increment.PostsCounterIncrementer",
      ]
    tags:
      - { name: domainEventSubscriber }

  # Post counter increment repository:
  Contexts.posts.PostsCounter.domain.Repository:
    class: ../../../contexts/Posts/PostsCounter/infrastructure/persistence/sequelize/repositories/PostsCounterPostgresqlRepository

  ## Incrementer:
  Contexts.Posts/PostsCounter.application.increment.PostsCounterIncrementer:
    class: ../../../contexts/Posts/PostsCounter/application/increment/PostsCounterIncrementer
    arguments: ["@Contexts.posts.PostsCounter.domain.Repository"]

  ## EventSubscribers:
  Contexts.posts.application.create.DomainEventSubscribers:
    class: ../../../contexts/shared/infrastructure/EventBus/DomainEventSubscribers
    arguments: ["!tagged domainEventSubscriber"]

  #### CommandBus:

  Contexts.shared.infrastructure.CommandBus:
    class: ../../../contexts/shared/infrastructure/CommandBus/InMemoryCommandBus
    arguments: ["!tagged commandHandler"]

  #### EventBus:

  Contexts.shared.infrastructure.EventBus:
    class: ../../../contexts/shared/infrastructure/EventBus/InMemory/InMemoryAsyncEventBus
